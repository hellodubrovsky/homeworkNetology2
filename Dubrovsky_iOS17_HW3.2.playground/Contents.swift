import UIKit
import Foundation

/*  MARK: Задача 1 (основная)
    ВЫ - главный архитектор в команде разработчиков. Ваша задача - разработать программное обеспечение (ПО) для дилерских центров по продаже автомобилей.
    Ваша цель - создать гибкое ПО. Что это значит? Ваше ПО должно подходить для любой марки авто, должно быть расширяемым и масштабируемым в дальнейшем, чтобы ваша компания могла выпускать обновления.
    Задача разделена на 4 части, в каждой из них нужно самостоятельно подумать, какой тип данных передать каждому свойству для комфортной работы, а также по необходимости добавить вспомогательные методы.

    MARK: Часть 1.
    Для начала нужно описать машину минимальным набором параметров, используя протокол.
    Алгоритм выполнения:
    1) Создайте протокол 'Car'
    2) Добавьте в него свойства:
    3) 'model' (только для чтения): марка
    4) 'color' (только для чтения): цвет
    5) 'buildDate' (только для чтения): дата выпуска
    6) 'price' (чтение и запись): цена авто
    7) 'accessories' (чтение и запись): дополнительное оборудование (тонировка, сингнализация, спортивные диски)
    8) 'isServiced' (чтение и запись): сделана ли предпродажная подготовка. Обычно ее делают в дилерских центрах перед постановкой машины в салон. */

protocol Car {
    var model: String { get }
    var color: UIColor { get }
    var buildDate: Int { get }
    var price: Double { get set }
    var accessories: [String] { get set }
    var isServiced: Bool { get set }
}
